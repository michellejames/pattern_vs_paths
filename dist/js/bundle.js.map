{"version":3,"sources":["bundle.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","console","log","unique","fs","readFile","err","data","readFileSync","stack","pattern","patternLength","paths","pathLength","j","cleanPath","removeSlashes","matches","compare","splitPattern","split","splitPaths","path","charAt","substr","slice"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\nconsole.log(\"Hello World from app.js!\");\n\nvar unique = require('uniq');\nvar fs = require('fs');\n\nfs.readFile('input_file.txt', 'utf8', function(err, data) {  \n    if (err) throw err;\n    console.log(data);\n});\n\ntry {  \n    var data = fs.readFileSync('input_file.txt', 'utf8');\n    console.log(data);    \n} catch(e) {\n    console.log('Error:', e.stack);\n}\n\n\nvar pattern = [\n\t\t\"*,2,3\",\n\t\t\"question, everything\",\n\t\t\"does, it, *\",\n\t\t\"mic, check\",\n\t\t\"a,b,c\",\n\t\t\"c,*,*\",\n\t\t\"5\",\n];\n\nvar patternLength = pattern.length;\n\nvar paths = [\n\t\t\"/1/2/3\",\n\t\t\"question/everything/you/hear\",\n\t\t\"does/\",\n\t\t\"mic/check\",\n\t\t\"/a/b/c/\",\n\t\t\"3\",\n\t\t\"c,5,y\",\n];\n\nvar pathLength = paths.length;\n\nfor (var i = pattern.length - 1; i >= 0; i--) {\n\n\n\tfor (var j = paths.length - 1; j >= 0; j--) {\n\n\t\t// console.log(pattern[i], paths[j]);\n\t\t\n\t\tvar cleanPath = removeSlashes(paths[j]);\n\n\t\tvar matches = compare(pattern[i], cleanPath);\n\t\tconsole.log(matches);\n\n\t\tif (matches) {\n\t\t\tconsole.log(`pattern and path that match: ${pattern[i]} and ${cleanPath}`);\n\t\t}\n\t}\n}\n\n\nfunction compare(pattern, paths) {\n\n\tvar splitPattern = pattern.split(\",\");\n\tvar splitPaths = paths.split(\"/\");\n\t// console.log(splitPaths, splitPattern);\n\n\tif (splitPattern.length != splitPaths.length) {\n\t\treturn false;\n\t}\n\n\tfor (var i = splitPattern.length - 1; i >= 0; i--) {\n\t\tif (splitPattern[i] == \"*\") {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (splitPattern[i] != splitPaths[i]) {\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\treturn true;\n}\n\nfunction removeSlashes(path) {\n\n\tif (path.charAt(0) == \"/\") {\n\t\tpath = path.substr(1);\n\t}\n\n\tif (path.substr(-1) == \"/\") {\n\t\tpath = path.slice(0, -1);\t\t\n\t}\n\n\treturn path;\n}\n\n\n},{\"fs\":2}],2:[function(require,module,exports){\n\n},{}]},{},[1]);\n"]}